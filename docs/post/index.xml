<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on The Working R Programmer</title>
    <link>https://mailund.github.io/r-programmer-blog/post/</link>
    <description>Recent content in Posts on The Working R Programmer</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright &amp;copy; 2018 - Thomas Mailund</copyright>
    <lastBuildDate>Thu, 20 Sep 2018 05:00:15 +0200</lastBuildDate>
    
	<atom:link href="https://mailund.github.io/r-programmer-blog/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Scoping Rules and NSE</title>
      <link>https://mailund.github.io/r-programmer-blog/2018/09/20/scoping-rules-and-nse/</link>
      <pubDate>Thu, 20 Sep 2018 05:00:15 +0200</pubDate>
      
      <guid>https://mailund.github.io/r-programmer-blog/2018/09/20/scoping-rules-and-nse/</guid>
      <description>Earlier this week, I wrote some tweets about how you have to be careful about scopes when you do non-standard evaluation. I cover this in both Metaprogramming in R and Domain-Specific Languages in R, but this tweet</description>
    </item>
    
    <item>
      <title>New Package Releases: foolbox and tailr</title>
      <link>https://mailund.github.io/r-programmer-blog/2018/04/27/new-package-releases-foolbox-and-tailr/</link>
      <pubDate>Fri, 27 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mailund.github.io/r-programmer-blog/2018/04/27/new-package-releases-foolbox-and-tailr/</guid>
      <description>I have just released version 0.1.0 of foolbox and version 0.1.2 of tailr. I haven&amp;rsquo;t actually done much on the packages the last three weeks, and they have been very close to these releases for a while, but now I had the spare time and energy to actually send them off.</description>
    </item>
    
    <item>
      <title>“Optional” types using pmatch</title>
      <link>https://mailund.github.io/r-programmer-blog/2018/03/30/optional-types-using-pmatch/</link>
      <pubDate>Fri, 30 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mailund.github.io/r-programmer-blog/2018/03/30/optional-types-using-pmatch/</guid>
      <description>Some programming languages, e.g. Swift, have special &amp;ldquo;optional&amp;rdquo; types. These are types the represent elements that either contain a value of some other type or contain nothing at all. It is a way of computing with the possibility that some operations cannot be done and then propagating that along in the computations.</description>
    </item>
    
    <item>
      <title>Lots of Function Transformations</title>
      <link>https://mailund.github.io/r-programmer-blog/2018/03/27/transforming-functions-with-cases-calls/</link>
      <pubDate>Tue, 27 Mar 2018 19:34:39 +0200</pubDate>
      
      <guid>https://mailund.github.io/r-programmer-blog/2018/03/27/transforming-functions-with-cases-calls/</guid>
      <description>The last couple of days I&amp;rsquo;ve been doing a lot of experimenting with a package for function rewriting: foolbox. I am doing some function transformations in both pmatch and tailr and they look very much alike, so I figured I should collect the shared functionality in a separate package.</description>
    </item>
    
    <item>
      <title>pmatch 0.1.3</title>
      <link>https://mailund.github.io/r-programmer-blog/2018/03/22/pmatch-0-1-3/</link>
      <pubDate>Thu, 22 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mailund.github.io/r-programmer-blog/2018/03/22/pmatch-0-1-3/</guid>
      <description>I have just released version 0.1.3 of pmatch to CRAN. There are not a lot of changes to this version compared to 0.1.2, but enough that I felt it would be good to get a version out before I pull the entire package apart to make it dependent on toolbox for its transformation function.</description>
    </item>
    
    <item>
      <title>Transforming functions with cases calls</title>
      <link>https://mailund.github.io/r-programmer-blog/2018/03/18/transforming-functions-with-cases-calls/</link>
      <pubDate>Sun, 18 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mailund.github.io/r-programmer-blog/2018/03/18/transforming-functions-with-cases-calls/</guid>
      <description>The issue with byte-compilation I wrote about yesterday can indeed be fixed by transforming functions that call cases. And that was very easy to implement since I already had all the bits and pieces I needed for it from the tailr transformations.</description>
    </item>
    
    <item>
      <title>Building a package that uses pattern matching</title>
      <link>https://mailund.github.io/r-programmer-blog/2018/03/17/building-a-package-that-uses-pattern-matching/</link>
      <pubDate>Sat, 17 Mar 2018 14:35:16 +0100</pubDate>
      
      <guid>https://mailund.github.io/r-programmer-blog/2018/03/17/building-a-package-that-uses-pattern-matching/</guid>
      <description>After a week spend programming string algorithms in C—for teaching purposes, I am not working on a new read-mapper—it is nice to get back to programming in R. I made a new release of tailr today, so that is good, but what I really wanted to work on was matchbox.</description>
    </item>
    
    <item>
      <title>tailr v0.1.1</title>
      <link>https://mailund.github.io/r-programmer-blog/2018/03/17/tailr-v0.1.1/</link>
      <pubDate>Sat, 17 Mar 2018 12:35:16 +0100</pubDate>
      
      <guid>https://mailund.github.io/r-programmer-blog/2018/03/17/tailr-v0.1.1/</guid>
      <description>As I wrote about here and here, I had a problem in tailr with higher-order functions. In the transformation for tail-recursion optimisation, I need to know which actual functions each name refer to, in order to apply user-defined transformations, but with higher-order functions, those are not known until runtime.</description>
    </item>
    
    <item>
      <title>Red-black trees in matchbox</title>
      <link>https://mailund.github.io/r-programmer-blog/2018/03/12/red-black-trees-in-matchbox/</link>
      <pubDate>Mon, 12 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mailund.github.io/r-programmer-blog/2018/03/12/red-black-trees-in-matchbox/</guid>
      <description>I&amp;rsquo;m working on implementing red-black search trees in matchbox and have managed most of it by now. I still need to implement deletion and the re-balancing code for handling those, but I have insertion up and running.</description>
    </item>
    
    <item>
      <title>Linked lists in matchbox</title>
      <link>https://mailund.github.io/r-programmer-blog/2018/03/11/linked-lists-in-matchbox/</link>
      <pubDate>Sun, 11 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mailund.github.io/r-programmer-blog/2018/03/11/linked-lists-in-matchbox/</guid>
      <description>I have started playing with data structures in matchbox and the first structure I implement had to be linked lists. That is the most versatile data structure I use and it is missing from R.</description>
    </item>
    
    <item>
      <title>Problems With Higher Order Functions in tailr</title>
      <link>https://mailund.github.io/r-programmer-blog/2018/03/09/problems-with-higher-order-functions-in-tailr/</link>
      <pubDate>Fri, 09 Mar 2018 18:38:52 +0100</pubDate>
      
      <guid>https://mailund.github.io/r-programmer-blog/2018/03/09/problems-with-higher-order-functions-in-tailr/</guid>
      <description>Ok, there is a problem with higher-order functions in my tailr package that I ran into while writing linked list functions for my matchbox package.1
If you write a tail-recursive function that uses a parameter-function, the tailr package will complain that it doesn&amp;rsquo;t see that function in scope.</description>
    </item>
    
    <item>
      <title>Matchbox and CMD CHECK</title>
      <link>https://mailund.github.io/r-programmer-blog/2018/03/08/matchbox-and-cmd-check/</link>
      <pubDate>Thu, 08 Mar 2018 06:59:09 +0100</pubDate>
      
      <guid>https://mailund.github.io/r-programmer-blog/2018/03/08/matchbox-and-cmd-check/</guid>
      <description>Ok, first, the package I wrote about yesterday will be called matchbox, following Dmytro Perepolkin&amp;rsquo;s suggestion (thanks!). You can get it at GitHub.
There isn&amp;rsquo;t much to it yet since I haven&amp;rsquo;t really started implementing the data structures I want to put in it.</description>
    </item>
    
    <item>
      <title>Help Me Choose a Package Name</title>
      <link>https://mailund.github.io/r-programmer-blog/2018/03/07/help-me-choose-a-name/</link>
      <pubDate>Wed, 07 Mar 2018 07:07:11 +0100</pubDate>
      
      <guid>https://mailund.github.io/r-programmer-blog/2018/03/07/help-me-choose-a-name/</guid>
      <description>What&amp;rsquo;s in a name? That which we call a rose By any other word would smell as sweet — William Shakespeare, Romeo and Juliet
 I have plans for re-implementing several of the data structures I wrote about in Functional Data Structures in R.</description>
    </item>
    
    <item>
      <title>Variable bindings with pattern matching</title>
      <link>https://mailund.github.io/r-programmer-blog/2018/03/06/variable-bindings-with-pattern-matching/</link>
      <pubDate>Tue, 06 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mailund.github.io/r-programmer-blog/2018/03/06/variable-bindings-with-pattern-matching/</guid>
      <description>I just added a new feature to my pmatch package. You will need the development version to get it, until I make a new release, and I have a few more features planned before that.</description>
    </item>
    
    <item>
      <title>Another approach to evaluating dynprog expressions</title>
      <link>https://mailund.github.io/r-programmer-blog/2018/03/05/another-approach-to-evaluating-dynprog-expressions/</link>
      <pubDate>Mon, 05 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mailund.github.io/r-programmer-blog/2018/03/05/another-approach-to-evaluating-dynprog-expressions/</guid>
      <description>In the approach to evaluating dynamic-programming expressions, that I wrote about yesterday, I used ranges- and recursion-specifications to build a loop for updating a table and then evaluated that loop inside an environment where local variables would over-scope the quosure environment from the specifications.</description>
    </item>
    
    <item>
      <title>Comments</title>
      <link>https://mailund.github.io/r-programmer-blog/2018/03/04/comments/</link>
      <pubDate>Sun, 04 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mailund.github.io/r-programmer-blog/2018/03/04/comments/</guid>
      <description>Ok, if this is working, it should now be possible to comment on posts here.
I was a bit slow in trying this out, because I had a hellish time setting up the blog in the first place, and I expected adding comments support with Disqus would be just as hard, but if this is working, it was a simple matter of adding</description>
    </item>
    
    <item>
      <title>Evaluating dynprog expressions</title>
      <link>https://mailund.github.io/r-programmer-blog/2018/03/04/evaluating-dynprog-expressions/</link>
      <pubDate>Sun, 04 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mailund.github.io/r-programmer-blog/2018/03/04/evaluating-dynprog-expressions/</guid>
      <description>I think I now have a complete implementation of the dynamic programming DSL I wrote about the other day. You can install it from the GitHub repository if you want to experiment with it.</description>
    </item>
    
    <item>
      <title>Tick-marks for log10 axis</title>
      <link>https://mailund.github.io/r-programmer-blog/2018/03/03/tick-marks-for-log10-axis/</link>
      <pubDate>Sat, 03 Mar 2018 18:00:00 +0100</pubDate>
      
      <guid>https://mailund.github.io/r-programmer-blog/2018/03/03/tick-marks-for-log10-axis/</guid>
      <description>For the tailr post I needed to plot some benchmark results. I still haven&amp;rsquo;t figure out how I can get plots from RMarkdown automatically moved to the right directory here, but that’s okay.</description>
    </item>
    
    <item>
      <title>Designing a DSL for dynamic programming</title>
      <link>https://mailund.github.io/r-programmer-blog/2018/03/03/designing-a-dsl-for-dynamic-programming/</link>
      <pubDate>Sat, 03 Mar 2018 10:00:00 +0100</pubDate>
      
      <guid>https://mailund.github.io/r-programmer-blog/2018/03/03/designing-a-dsl-for-dynamic-programming/</guid>
      <description>I&amp;rsquo;m working on an example for one of the chapters of Domain Specific Languages in R that will appear in the printed version but weren&amp;rsquo;t included in the earlier e-book. The plan is to have one to three extra example chapters, depending on how much I can do before my deadline on April 1st.</description>
    </item>
    
    <item>
      <title>tailr — Tail Recursion Optimisation</title>
      <link>https://mailund.github.io/r-programmer-blog/2018/03/02/tailr--tail-recursion-optimisation/</link>
      <pubDate>Fri, 02 Mar 2018 10:38:06 +0100</pubDate>
      
      <guid>https://mailund.github.io/r-programmer-blog/2018/03/02/tailr--tail-recursion-optimisation/</guid>
      <description>Believe it or not, all the bother with setting up this blog was such that I could write this post easier than I could on Wordpress. So now, let us get to some actual R programming!</description>
    </item>
    
    <item>
      <title>Blog Setup</title>
      <link>https://mailund.github.io/r-programmer-blog/2018/03/02/blog-setup/</link>
      <pubDate>Fri, 02 Mar 2018 09:48:01 +0100</pubDate>
      
      <guid>https://mailund.github.io/r-programmer-blog/2018/03/02/blog-setup/</guid>
      <description>Ok, I hadn&amp;rsquo;t planned to write any more about how the blog is set up, since that isn&amp;rsquo;t that interesting to me and probably isn&amp;rsquo;t to you — either you know a lot more about this than me, in which case I have nothing to teach you, or you just don&amp;rsquo;t care, which I can relate to.</description>
    </item>
    
    <item>
      <title>Purpose of this blog</title>
      <link>https://mailund.github.io/r-programmer-blog/2018/03/02/purpose-of-this-blog/</link>
      <pubDate>Fri, 02 Mar 2018 07:58:24 +0100</pubDate>
      
      <guid>https://mailund.github.io/r-programmer-blog/2018/03/02/purpose-of-this-blog/</guid>
      <description>Since I already have a blog, you might be asking, &amp;ldquo;why another one?&amp;rdquo;.
It&amp;rsquo;s a fair question, and I am not creating a new blog just to make you follow two instead of one.</description>
    </item>
    
    <item>
      <title>First Post</title>
      <link>https://mailund.github.io/r-programmer-blog/2018/03/01/first-post/</link>
      <pubDate>Thu, 01 Mar 2018 22:46:35 +0100</pubDate>
      
      <guid>https://mailund.github.io/r-programmer-blog/2018/03/01/first-post/</guid>
      <description>This is my first attempt at a Hugo+Blogdown blog. I got tired of struggling with formatting R code on my Wordpress blog, so figured it would make sense to use RMarkdown to write about R code.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://mailund.github.io/r-programmer-blog/1/01/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mailund.github.io/r-programmer-blog/1/01/01/</guid>
      <description>“Optional” types using pmatch /*! jQuery v1.11.3 | (c) 2005, 2015 jQuery Foundation, Inc. | jquery.org/license */ !function(a,b){&#34;object&#34;==typeof module&amp;&amp;&#34;object&#34;==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error(&#34;jQuery requires a window with a document&#34;);return b(a)}:b(a)}(&#34;undefined&#34;!=typeof window?</description>
    </item>
    
  </channel>
</rss>