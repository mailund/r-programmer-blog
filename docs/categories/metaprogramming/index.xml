<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Metaprogramming on The Working R Programmer</title>
    <link>https://mailund.github.io/r-programmer-blog/categories/metaprogramming/</link>
    <description>Recent content in Metaprogramming on The Working R Programmer</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright &amp;copy; 2018 - Thomas Mailund</copyright>
    <lastBuildDate>Mon, 05 Mar 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://mailund.github.io/r-programmer-blog/categories/metaprogramming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Another approach to evaluating dynprog expressions</title>
      <link>https://mailund.github.io/r-programmer-blog/2018/03/05/another-approach-to-evaluating-dynprog-expressions/</link>
      <pubDate>Mon, 05 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mailund.github.io/r-programmer-blog/2018/03/05/another-approach-to-evaluating-dynprog-expressions/</guid>
      <description>In the approach to evaluating dynamic-programming expressions, that I wrote about yesterday, I used ranges- and recursion-specifications to build a loop for updating a table and then evaluated that loop inside an environment where local variables would over-scope the quosure environment from the specifications.</description>
    </item>
    
    <item>
      <title>Evaluating dynprog expressions</title>
      <link>https://mailund.github.io/r-programmer-blog/2018/03/04/evaluating-dynprog-expressions/</link>
      <pubDate>Sun, 04 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://mailund.github.io/r-programmer-blog/2018/03/04/evaluating-dynprog-expressions/</guid>
      <description>I think I now have a complete implementation of the dynamic programming DSL I wrote about the other day. You can install it from the GitHub repository if you want to experiment with it.</description>
    </item>
    
    <item>
      <title>Designing a DSL for dynamic programming</title>
      <link>https://mailund.github.io/r-programmer-blog/2018/03/03/designing-a-dsl-for-dynamic-programming/</link>
      <pubDate>Sat, 03 Mar 2018 10:00:00 +0100</pubDate>
      
      <guid>https://mailund.github.io/r-programmer-blog/2018/03/03/designing-a-dsl-for-dynamic-programming/</guid>
      <description>I&amp;rsquo;m working on an example for one of the chapters of Domain Specific Languages in R that will appear in the printed version but weren&amp;rsquo;t included in the earlier e-book. The plan is to have one to three extra example chapters, depending on how much I can do before my deadline on April 1st.</description>
    </item>
    
    <item>
      <title>tailr â€” Tail Recursion Optimisation</title>
      <link>https://mailund.github.io/r-programmer-blog/2018/03/02/tailr--tail-recursion-optimisation/</link>
      <pubDate>Fri, 02 Mar 2018 10:38:06 +0100</pubDate>
      
      <guid>https://mailund.github.io/r-programmer-blog/2018/03/02/tailr--tail-recursion-optimisation/</guid>
      <description>Believe it or not, all the bother with setting up this blog was such that I could write this post easier than I could on Wordpress. So now, let us get to some actual R programming!</description>
    </item>
    
  </channel>
</rss>